apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  labels:
{{ include "common.labels.meta" . | indent 4 }}
spec:
  serviceName: svc-{{ .Release.Name }}
  replicas: {{ .Values.replicacount }}
  selector:
    matchLabels:
{{ include "common.labels.match" . | indent 6 }}
  template:
    metadata:
      labels:
{{ include "common.labels.meta" . | indent 8 }}
    spec:
      containers:
        - name: {{ .Values.image.repository | trimPrefix "is/" }}-{{ .Release.Name }}
          image: {{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.debug }}
          command: ["/bin/sh"]
          args: ["-c", "while true; do date; sleep 60; done"]
          {{- end }}
          env:
            - name: REDIS_DBCL
              value: "{{ .Release.Name }}"
          volumeMounts:
            - name: etc-{{ .Release.Name }}
              mountPath: /usr/local/etc/redis
              readOnly: true
            - name: pvc
              mountPath: /var/opt/redis/data
              readOnly: false
      volumes:
        - name: etc-{{ .Release.Name }}
          hostPath:
            path: {{ .Values.base.etc }}/{{ .Release.Name }}
            type: Directory
      dnsPolicy: ClusterFirst
      automountServiceAccountToken: false
      enableServiceLinks: false
  volumeClaimTemplates:
    - metadata:
        name: pvc
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "sc-local"
        resources:
          requests:
            storage: 10Gi
